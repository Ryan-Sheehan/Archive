{"version":3,"file":"static/webpack/static/development/pages/index.js.f4a88558926c9a13265f.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\n\nimport { motion } from 'framer-motion';\n \nimport Layout from \"../components/Layout\";\nimport sanity from \"../lib/sanity\";\nimport listStyles from \"../styles/list\";\nimport infoStyles from \"../styles/info\";\nimport sidebarStyles from \"../styles/sidebar\";\nimport fontStyles from \"../styles/fonts\";\n\nimport imageUrlFor from \"../utils/imageUrlFor\";\n\nimport EmailSVG from \"../components/EmailSVG\";\n\nconst query = `*[_type == \"ryan\"] {\n  _id,\n  name,\n  summary,\n  date,\n  image,\n  \"imageAspect\": image.asset->.metadata.dimensions.aspectRatio,\n}[0...50]\n`;\n\nconst scaleStart = {\n    scale: .8,\n    opacity: 0\n};\n\nconst scaleEnd = {\n  scale: 1,\n  opacity: 1,\n  transition: {\n    delay: 0\n  }\n};\n\n\nconst translateLeftStart = {\n    x: -200,\n    opacity: 0\n};\n\nconst translateLeftEnd = {\n  x: 0,\n  opacity: 1,\n  transition: {\n    delay: 0\n  }\n};\n\nconst translateUpStart = {\n    y: 400,\n    opacity: 0\n};\n\nconst translateUpEnd = {\n  y: 0,\n  opacity: 1,\n  transition: {\n    delay: 0\n  }\n};\n\n\n\n\n\n\n\nclass Ryans extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      active: null,\n      \n    }\n\n    this.domRefs = {};\n\n  }\n\n  handleClick = (id) => {\n    console.log(this.domRefs[id])\n    if (this.state.active === id) {\n      this.setState({active:null})\n    }\n    else {\n      this.setState({active:id})\n    }\n    \n    this.domRefs[id].scrollIntoView({ behavior: 'smooth', block: 'start' });\n    \n  }\n\n  onItemClick = () => {\n\n  }\n\n\n  \n  \n\n   \n  render() {\n  return (\n    <Layout>\n     <div id=\"main\" className={this.state.active !== null ? \"container-pushed\" : \"container\"}>\n\n     \n     <div className=\"sidebar\" style={{opacity: this.state.active !== null ? '0' : '1'}}>\n\n     <motion.div initial=\"hidden\" animate=\"visible\" variants={{hidden: translateLeftStart,visible: translateLeftEnd}}>\n      \n      <div className=\"sidebar-inner \">\n       \n       <div>\n         <div className=\"sidebar-name no-flickr\">Ryan Sheehan</div>\n         <div className=\"sidebar-bio\">An archive of some of the graphic work Ryan has made in no particular order. Hover over any piece for a description. Click on the email to copy it.</div>\n       </div>\n\n       <motion.div className=\"contact\" initial=\"hidden\" animate=\"visible\" variants={{hidden: translateUpStart,visible: translateUpEnd}}>\n         <EmailSVG/>\n       </motion.div>\n     \n      </div>\n     </motion.div>\n  \n     </div>\n\n\n     <div className={this.state.active !== null ?\"info-open\":\"info\"} >\n\n     \n      \n      <div className=\"info-inner\">\n       \n       <div>\n         \n         \n         {this.props.ryan.map((ryan, i) => (this.state.active === ryan._id && \n           <React.Fragment>\n           <div className=\"info-name\">{ryan.name}</div>\n           <div className=\"info-desc\">{ryan.summary}</div>\n           <div className=\"info-date\">{ryan.date}</div>\n           </React.Fragment>\n          ))}\n\n         \n         \n       </div>\n\n       \n     \n      </div>\n\n  \n     </div>\n\n\n\n\n\n     \n     \n\n\n      <div className=\"ryan-list\">\n        <ul className=\"ryan-list-inner\">\n          {this.props.ryan.map((ryan, i) => (\n            <li key={ryan._id} \n            ref={(ref) => {this.domRefs[ryan._id] = ref}}\n            className={\"list_item\"}\n            onClick={() => {this.handleClick(ryan._id)}}>\n              {/*<Link href=\"/ryan/[id]\" as={`/ryan/${ryan._id}`}>*/}\n                <a>\n                  {ryan.image && (\n                    <motion.div initial=\"hidden\" animate=\"visible\" variants={{hidden: scaleStart,visible: scaleEnd}}>\n                    \n                    <img \n                      \n                      src={imageUrlFor(ryan.image).width(800)}\n                      width=\"800\"\n                      height={800 / ryan.imageAspect}\n                    />\n                    \n             \n                    </motion.div>\n                  )}\n                  \n                </a>\n              {/*</Link>*/}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n\n      <style jsx global>{`\n        body {\n          margin: 0;\n          \n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n          transition-duration: 1s;\n          background-color: ${this.state.active !== null ? '#000' : '#fff'};\n          color: #000;\n        }\n\n        \n\n      `}</style>\n      <style jsx>{`\n        \n        .container {\n\n          height: 100vh;\n          width: 100vw;\n          display: grid;\n          grid-template-columns: 40vw 60vw;\n\n          grid-template-rows: 100vh;\n          margin: 0rem;\n          position: relative;\n          padding: 0;\n          transition-delay: 0s;\n          transition-duration: 0.5s;\n          transition-timing-function: cubic-bezier(0.85, 0, 0.15, 1);\n          transform: translateX(0);\n          backgroundColor:#fff;\n        }\n\n        .container-pushed {\n\n          height: 100vh;\n          width: 100vw;\n          display: grid;\n          grid-template-columns: 40vw 60vw;\n\n          grid-template-rows: 100vh;\n          margin: 0rem;\n          position: relative;\n          padding: 0;\n          transition-delay: 0s;\n          transition-duration: 0.8s;\n          transform: translateX(-40vw);\n          transition-timing-function: cubic-bezier(0.85, 0, 0.15, 1);\n          backgroundColor:#000;\n          \n        }\n        \n        \n        \n        \n        \n    \n        \n        \n\n        \n\n\n      `}</style>\n      <style jsx>{sidebarStyles}</style>\n      <style jsx>{listStyles}</style>\n      <style jsx>{infoStyles}</style>\n      <style jsx>{fontStyles}</style>\n      </div>\n    </Layout>\n  );\n}\n};\n\nexport const getStaticProps = async () => {\n  const ryan = await sanity.fetch(query);\n\n  return {\n    props: { ryan } // will be passed to the page component as props\n  };\n}\n\nexport default Ryans;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAYA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AADA;AAHA;AASA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AADA;AAHA;AACA;AAaA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAYA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAvBA;AACA;AACA;AACA;AADA;AAKA;AAPA;AASA;AACA;;;AAumKA;;;;AAzMA;AACA;AAyMA;;AAUA;;;;A","sourceRoot":""}