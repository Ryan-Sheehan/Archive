{"version":3,"file":"static/webpack/static/development/pages/index.js.ec83572598fb364d85de.hot-update.js","sources":["webpack:///./pages/index.js","webpack:///./pages/svg/x.svg"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\n\nimport { motion } from 'framer-motion';\n\nimport ReactMarkdown from 'react-markdown'\n \nimport Layout from \"../components/Layout\";\nimport sanity from \"../lib/sanity\";\nimport listStyles from \"../styles/list\";\nimport infoStyles from \"../styles/info\";\nimport sidebarStyles from \"../styles/sidebar\";\nimport fontStyles from \"../styles/fonts\";\n\nimport imageUrlFor from \"../utils/imageUrlFor\";\n\nimport EmailSVG from \"../components/EmailSVG\";\n\nimport x from \"./svg/x.svg\";\n\nconst query = `*[_type == \"ryan\"] {\n  _id,\n  name,\n  summary,\n  date,\n  image,\n  \"imageAspect\": image.asset->.metadata.dimensions.aspectRatio,\n  \"color\":image.asset->.metadata.palette.dominant.background\n}[0...50]\n`;\n\nconst scaleStart = {\n    scale: .8,\n    opacity: 0\n};\n\nconst scaleEnd = {\n  scale: 1,\n  opacity: 1,\n  transition: {\n    delay: 0\n  }\n};\n\n\nconst translateLeftStart = {\n    x: -200,\n    opacity: 0\n};\n\nconst translateLeftEnd = {\n  x: 0,\n  opacity: 1,\n  transition: {\n    delay: 0\n  }\n};\n\nconst translateUpStart = {\n    y: 400,\n    opacity: 0\n};\n\nconst translateUpEnd = {\n  y: 0,\n  opacity: 1,\n  transition: {\n    delay: 0\n  }\n};\n\n\n\n\n\n\nclass Ryans extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      active: null,\n      \n    }\n\n    this.domRefs = {};\n    \n\n  }\n\n  handleClick = (id) => {\n    console.log(this.domRefs[id])\n    if (this.state.active === id) {\n      this.setState({active:null})\n    }\n    else {\n      this.setState({active:id})\n    }\n    \n    this.domRefs[id].scrollIntoView({ behavior: 'smooth', block: 'start' });\n    \n  }\n\n  onItemClick = () => {\n\n  }\n\n\n  \n  \n\n   \n  render() {\n  return (\n    <Layout>\n     <div id=\"main\" className={this.state.active !== null ? \"container-pushed\" : \"container\"}>\n\n     \n     <div className=\"sidebar\" style={{opacity: this.state.active !== null ? '0' : '1'}}>\n\n     <motion.div initial=\"hidden\" animate=\"visible\" variants={{hidden: translateLeftStart,visible: translateLeftEnd}}>\n      \n      <div className=\"sidebar-inner \">\n       \n       <div>\n         <div className=\"sidebar-name no-flickr\">Ryan Sheehan</div>\n         <div className=\"sidebar-bio\">An archive of some of the graphic work Ryan has made in no particular order. Click on any piece for more information. Click on the email below to copy it. Reach out for anything.</div>\n       </div>\n\n       <motion.div className=\"contact\" initial=\"hidden\" animate=\"visible\" variants={{hidden: translateUpStart,visible: translateUpEnd}}>\n         <EmailSVG/>\n       </motion.div>\n     \n      </div>\n     </motion.div>\n  \n     </div>\n\n\n     <div className={this.state.active !== null ?\"info-open\":\"info\"} >\n\n     \n      \n      <div className=\"info-inner\">\n       \n       \n         \n         \n         {this.props.ryan.map((ryan, i) => (this.state.active === ryan._id && \n           <React.Fragment>\n           <div key={ryan._id}>\n           <div className=\"info-name\">{ryan.name}</div>\n           <div className=\"info-desc\">{<ReactMarkdown>{ryan.summary}</ReactMarkdown>}</div>\n           <div className=\"info-date\">{ryan.date.split(\"-\")[0]}</div>\n           </div>\n           \n           </React.Fragment>\n          ))}\n\n         \n         \n      \n\n       \n     \n      </div>\n\n  \n     </div>\n\n\n\n\n\n     \n     \n\n\n      <div className=\"ryan-list\">\n        <ul className=\"ryan-list-inner\">\n          {this.props.ryan.map((ryan, i) => (\n            <li key={ryan._id} \n            ref={(ref) => {this.domRefs[ryan._id] = ref}}\n            className={\"list_item\"}\n            onClick={() => {this.handleClick(ryan._id)}}>\n              {/*<Link href=\"/ryan/[id]\" as={`/ryan/${ryan._id}`}>*/}\n                <a>\n                  {ryan.image && (\n                    <motion.div initial=\"hidden\" animate=\"visible\" variants={{hidden: scaleStart,visible: scaleEnd}}>\n                    \n                    <img \n                      \n                      src={imageUrlFor(ryan.image).width(800)}\n                      width=\"800\"\n                      height={800 / ryan.imageAspect}\n                    />\n                    \n             \n                    </motion.div>\n                  )}\n                  \n                </a>\n              {/*</Link>*/}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n\n      <style jsx global>{`\n        body {\n          margin: 0;\n          \n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n          transition-duration: 1s;\n          background-color: ${this.state.active !== null ? '#000' : '#fff'};\n          color: #000;\n        }\n\n        \n\n      `}</style>\n      <style jsx>{`\n        \n        .container {\n\n          height: 100vh;\n          width: 100vw;\n          display: grid;\n          grid-template-columns: 40vw 60vw;\n          overflow-y:hidden;\n          grid-template-rows: 100vh;\n          margin: 0rem;\n          position: relative;\n          padding: 0;\n          transition-delay: 0s;\n          transition-duration: 0.5s;\n          transition-timing-function: cubic-bezier(0.85, 0, 0.15, 1);\n          transform: translateX(0);\n          backgroundColor:#fff;\n        }\n\n        .container-pushed {\n\n          height: 100vh;\n          width: 100vw;\n          display: grid;\n          grid-template-columns: 40vw 60vw;\n\n          grid-template-rows: 100vh;\n          margin: 0rem;\n          position: relative;\n          padding: 0;\n          transition-delay: 0s;\n          transition-duration: 0.8s;\n          transform: translateX(-40vw);\n          transition-timing-function: cubic-bezier(0.85, 0, 0.15, 1);\n          backgroundColor:#000;\n          \n        }\n        \n        \n        \n        \n        \n    \n        \n        \n\n        \n\n\n      `}</style>\n      <style jsx>{sidebarStyles}</style>\n      <style jsx>{listStyles}</style>\n      <style jsx>{infoStyles}</style>\n      <style jsx>{fontStyles}</style>\n      </div>\n    </Layout>\n  );\n}\n};\n\nexport const getStaticProps = async () => {\n  const ryan = await sanity.fetch(query);\n\n  return {\n    props: { ryan } // will be passed to the page component as props\n  };\n}\n\nexport default Ryans;","var React = require('react');\n\nfunction X (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"defs\",{\"key\":0},React.createElement(\"style\",null,\".cls-1{fill:none;stroke:#fff;stroke-linecap:round;stroke-miterlimit:10;stroke-width:3px;}\")),React.createElement(\"g\",{\"id\":\"Layer_2\",\"data-name\":\"Layer 2\",\"key\":1},React.createElement(\"g\",{\"id\":\"Layer_1-2\",\"data-name\":\"Layer 1\"},[React.createElement(\"line\",{\"className\":\"cls-1\",\"x1\":\"1.5\",\"y1\":\"1.5\",\"x2\":\"191.86\",\"y2\":\"191.86\",\"key\":0}),React.createElement(\"line\",{\"className\":\"cls-1\",\"x1\":\"191.86\",\"y1\":\"1.5\",\"x2\":\"1.5\",\"y2\":\"191.86\",\"key\":1})]))]);\n}\n\nX.defaultProps = {\"viewBox\":\"0 0 193.36 193.36\"};\n\nmodule.exports = X;\n\nX.default = X;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAaA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AADA;AAHA;AASA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AADA;AAHA;AAQA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AADA;AAHA;AACA;AAYA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAaA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAxBA;AACA;AACA;AACA;AADA;AAKA;AAPA;AAUA;AACA;;;AAujEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsKA;;;;AA7MA;AACA;AA6MA;;AAUA;;;;;;;;;;;ACrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}